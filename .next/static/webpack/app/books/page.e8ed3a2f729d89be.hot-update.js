"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/books/page",{

/***/ "(app-pages-browser)/./src/lib/api/books.ts":
/*!******************************!*\
  !*** ./src/lib/api/books.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchBook: function() { return /* binding */ fetchBook; },\n/* harmony export */   fetchBooks: function() { return /* binding */ fetchBooks; },\n/* harmony export */   fetchBooksByCategory: function() { return /* binding */ fetchBooksByCategory; },\n/* harmony export */   fetchCategories: function() { return /* binding */ fetchCategories; },\n/* harmony export */   fetchNewBooks: function() { return /* binding */ fetchNewBooks; },\n/* harmony export */   fetchPopularBooks: function() { return /* binding */ fetchPopularBooks; },\n/* harmony export */   searchBooks: function() { return /* binding */ searchBooks; }\n/* harmony export */ });\n// ============================================================================\n// УТИЛИТЫ ДЛЯ URL\n// ============================================================================\nfunction getBaseUrl() {\n    // Server-side: use process.env\n    if (false) {}\n    // Client-side: use window.location\n    return window.location.origin;\n}\nfunction buildApiUrl(endpoint) {\n    const baseUrl = getBaseUrl();\n    return \"\".concat(baseUrl).concat(endpoint);\n}\n// ============================================================================\n// ПОЛУЧЕНИЕ СПИСКА КНИГ\n// ============================================================================\nasync function fetchBooks() {\n    let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    try {\n        const params = new URLSearchParams();\n        if (filters.category && filters.category !== \"all\") {\n            params.append(\"category\", filters.category);\n        }\n        if (filters.search) {\n            params.append(\"search\", filters.search);\n        }\n        if (filters.limit) {\n            params.append(\"limit\", filters.limit.toString());\n        }\n        if (filters.available_only) {\n            params.append(\"available_only\", \"true\");\n        }\n        const endpoint = \"/api/books?\".concat(params.toString());\n        const url = buildApiUrl(endpoint);\n        console.log(\"\\uD83D\\uDD0D Client: Fetching books from:\", url);\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        if (!result.success) {\n            throw new Error(result.error || \"Ошибка при получении книг\");\n        }\n        console.log(\"✅ Client: Received \".concat(result.count, \" books\"));\n        return result;\n    } catch (error) {\n        console.error(\"\\uD83D\\uDCA5 Client: Error fetching books:\", error);\n        return {\n            success: false,\n            data: [],\n            count: 0,\n            error: error instanceof Error ? error.message : \"Неизвестная ошибка\"\n        };\n    }\n}\n// ============================================================================\n// ПОЛУЧЕНИЕ ОДНОЙ КНИГИ\n// ============================================================================\nasync function fetchBook(id) {\n    try {\n        if (!id) {\n            throw new Error(\"ID книги не указан\");\n        }\n        console.log(\"\\uD83D\\uDCD6 Client: Fetching book with ID: \".concat(id));\n        const endpoint = \"/api/books/\".concat(id);\n        const url = buildApiUrl(endpoint);\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            if (response.status === 404) {\n                throw new Error(\"Книга не найдена\");\n            }\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        if (!result.success) {\n            throw new Error(result.error || \"Ошибка при получении книги\");\n        }\n        console.log(\"✅ Client: Received book: \".concat(result.data.title));\n        return result;\n    } catch (error) {\n        console.error(\"\\uD83D\\uDCA5 Client: Error fetching book:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Неизвестная ошибка\"\n        };\n    }\n}\n// ============================================================================\n// ПОЛУЧЕНИЕ КАТЕГОРИЙ\n// ============================================================================\nasync function fetchCategories() {\n    try {\n        console.log(\"\\uD83D\\uDCC2 Client: Fetching categories\");\n        const response = await fetch(\"/api/books\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                action: \"get_categories\"\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        if (!result.success) {\n            throw new Error(result.error || \"Ошибка при получении категорий\");\n        }\n        console.log(\"✅ Client: Received \".concat(result.count, \" categories\"));\n        return result;\n    } catch (error) {\n        console.error(\"\\uD83D\\uDCA5 Client: Error fetching categories:\", error);\n        return {\n            success: false,\n            data: [],\n            count: 0,\n            error: error instanceof Error ? error.message : \"Неизвестная ошибка\"\n        };\n    }\n}\n// ============================================================================\n// УТИЛИТЫ\n// ============================================================================\n/**\n * Получить популярные книги (доступные, с высоким рейтингом)\n */ async function fetchPopularBooks() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 8;\n    return fetchBooks({\n        available_only: true,\n        limit\n    });\n}\n/**\n * Получить новые книги (последние добавленные)\n */ async function fetchNewBooks() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 12;\n    return fetchBooks({\n        limit\n    });\n}\n/**\n * Поиск книг по запросу\n */ async function searchBooks(query) {\n    let limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 20;\n    if (!query.trim()) {\n        return {\n            success: true,\n            data: [],\n            count: 0\n        };\n    }\n    return fetchBooks({\n        search: query.trim(),\n        limit\n    });\n}\n/**\n * Получить книги по категории\n */ async function fetchBooksByCategory(category, limit) {\n    return fetchBooks({\n        category,\n        limit\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/books.ts\n"));

/***/ })

});