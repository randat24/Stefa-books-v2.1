"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/page",{

/***/ "(app-pages-browser)/./src/app/admin/actions.ts":
/*!**********************************!*\
  !*** ./src/app/admin/actions.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBook: function() { return /* binding */ createBook; },\n/* harmony export */   deleteBook: function() { return /* binding */ deleteBook; },\n/* harmony export */   updateBook: function() { return /* binding */ updateBook; }\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(app-pages-browser)/../../../node_modules/.pnpm/zod@3.23.8/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\n\n// ============================================================================\n// ВАЛІДАЦІЙНІ СХЕМИ\n// ============================================================================\nconst BookInsertSchema = zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n    code: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().min(1, \"Код книги обов'язковий\"),\n    title: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().min(1, \"Назва книги обов'язкова\"),\n    author: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().min(1, \"Автор обов'язковий\"),\n    category: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().min(1, \"Категорія обов'язкова\"),\n    subcategory: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    description: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    short_description: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    isbn: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    pages: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().min(1).optional(),\n    age_range: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    language: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    publisher: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    publication_year: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().min(1000).max(new Date().getFullYear()).optional(),\n    cover_url: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().url().optional(),\n    status: zod__WEBPACK_IMPORTED_MODULE_1__.z.enum([\n        \"available\",\n        \"issued\",\n        \"reserved\",\n        \"lost\"\n    ]),\n    qty_total: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().min(1),\n    price_uah: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().min(0).optional(),\n    location: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().optional(),\n    rating: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().min(0).max(5).optional(),\n    rating_count: zod__WEBPACK_IMPORTED_MODULE_1__.z.number().int().min(0).optional(),\n    badges: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(zod__WEBPACK_IMPORTED_MODULE_1__.z.string()).optional(),\n    tags: zod__WEBPACK_IMPORTED_MODULE_1__.z.array(zod__WEBPACK_IMPORTED_MODULE_1__.z.string()).optional()\n});\n// ============================================================================\n// SERVER ACTIONS\n// ============================================================================\nasync function createBook(form) {\n    try {\n        // Валідуємо дані\n        const input = BookInsertSchema.parse(form);\n        console.log(\"Creating book:\", input);\n        // Создаем книгу в Supabase\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"books\").insert({\n            ...input,\n            qty_available: input.qty_total,\n            available: input.status === \"available\",\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n        }).select().single();\n        if (error) {\n            console.error(\"Supabase error:\", error);\n            throw new Error(error.message);\n        }\n        console.log(\"Book created successfully:\", data);\n        return {\n            success: true,\n            data\n        };\n    } catch (error) {\n        console.error(\"Create book error:\", error);\n        if (error instanceof zod__WEBPACK_IMPORTED_MODULE_1__.z.ZodError) {\n            return {\n                success: false,\n                error: error.errors.map((e)=>e.message).join(\", \")\n            };\n        }\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Невідома помилка\"\n        };\n    }\n}\nasync function updateBook(id, form) {\n    try {\n        var _form_subcategory, _form_description, _form_short_description, _form_location;\n        console.log(\"\\uD83D\\uDCDD Starting book update:\", id, form);\n        // Проверяем что ID действительно передан\n        if (!id || !id.trim()) {\n            return {\n                success: false,\n                error: \"ID книги не передан або пустий\"\n            };\n        }\n        // Валідуємо обов'язкові поля якщо вони присутні\n        if (form.code && !form.code.trim()) {\n            return {\n                success: false,\n                error: \"Код книги не може бути пустим\"\n            };\n        }\n        if (form.title && !form.title.trim()) {\n            return {\n                success: false,\n                error: \"Назва книги не може бути пустою\"\n            };\n        }\n        // Підготовлюємо дані для оновлення\n        const updateData = {};\n        if (form.code) updateData.code = form.code.trim();\n        if (form.title) updateData.title = form.title.trim();\n        if (form.author) updateData.author = form.author.trim();\n        if (form.category) updateData.category = form.category.trim();\n        if (form.subcategory !== undefined) updateData.subcategory = ((_form_subcategory = form.subcategory) === null || _form_subcategory === void 0 ? void 0 : _form_subcategory.trim()) || null;\n        if (form.description !== undefined) updateData.description = ((_form_description = form.description) === null || _form_description === void 0 ? void 0 : _form_description.trim()) || null;\n        if (form.short_description !== undefined) updateData.short_description = ((_form_short_description = form.short_description) === null || _form_short_description === void 0 ? void 0 : _form_short_description.trim()) || null;\n        if (form.location !== undefined) updateData.location = ((_form_location = form.location) === null || _form_location === void 0 ? void 0 : _form_location.trim()) || null;\n        if (form.cover_url !== undefined) updateData.cover_url = form.cover_url || null;\n        if (form.status) updateData.status = form.status;\n        if (form.qty_total !== undefined) updateData.qty_total = Math.max(1, form.qty_total);\n        if (form.price_uah !== undefined) updateData.price_uah = form.price_uah || null;\n        // Якщо змінюється кількість, оновлюємо доступність\n        if (form.qty_total !== undefined) {\n            // Підраховуємо активні аренди\n            const { data: rentals, error: rentalsError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"rentals\").select(\"id\").eq(\"book_id\", id).in(\"status\", [\n                \"active\",\n                \"overdue\"\n            ]);\n            if (rentalsError) {\n                console.warn(\"Could not count active rentals:\", rentalsError);\n            } else {\n                const activeRentals = (rentals === null || rentals === void 0 ? void 0 : rentals.length) || 0;\n                updateData.qty_available = Math.max(0, updateData.qty_total - activeRentals);\n                updateData.available = updateData.qty_available > 0;\n            }\n        }\n        // Оновлюємо дату зміни\n        updateData.updated_at = new Date().toISOString();\n        // Оновлюємо книгу в Supabase\n        const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"books\").update(updateData).eq(\"id\", id).select().single();\n        if (error) {\n            console.error(\"Supabase error:\", error);\n            throw new Error(error.message);\n        }\n        console.log(\"Book updated successfully:\", data);\n        return {\n            success: true,\n            data\n        };\n    } catch (error) {\n        console.error(\"Update book error:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Невідома помилка\"\n        };\n    }\n}\nasync function deleteBook(id) {\n    try {\n        console.log(\"Deleting book:\", id);\n        // Проверяем есть ли активные аренды для этой книги\n        const { data: rentals, error: rentalsError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"rentals\").select(\"id\").eq(\"book_id\", id).in(\"status\", [\n            \"active\",\n            \"overdue\"\n        ]);\n        if (rentalsError) {\n            throw new Error(\"Помилка перевірки орендувань: \".concat(rentalsError.message));\n        }\n        if (rentals && rentals.length > 0) {\n            return {\n                success: false,\n                error: \"Неможливо видалити книгу, яка має активні орендування. Спочатку поверніть всі примірники.\"\n            };\n        }\n        // Удаляем книгу\n        const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"books\").delete().eq(\"id\", id);\n        if (error) {\n            throw new Error(error.message);\n        }\n        console.log(\"Book deleted successfully:\", id);\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error(\"Delete book error:\", error);\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Невідома помилка\"\n        };\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/admin/actions.ts\n"));

/***/ })

});