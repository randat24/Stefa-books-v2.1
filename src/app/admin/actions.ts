import { z } from "zod"
import { supabase } from "@/lib/supabase"
import type { CreateBookForm } from "@/lib/types/admin"

// ============================================================================
// –í–ê–õ–Ü–î–ê–¶–Ü–ô–ù–Ü –°–•–ï–ú–ò
// ============================================================================

const BookInsertSchema = z.object({
  code: z.string().min(1, "–ö–æ–¥ –∫–Ω–∏–≥–∏ –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π"),
  title: z.string().min(1, "–ù–∞–∑–≤–∞ –∫–Ω–∏–≥–∏ –æ–±–æ–≤'—è–∑–∫–æ–≤–∞"),
  author: z.string().min(1, "–ê–≤—Ç–æ—Ä –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π"),
  category: z.string().min(1, "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –æ–±–æ–≤'—è–∑–∫–æ–≤–∞"),
  subcategory: z.string().optional(),
  description: z.string().optional(),
  short_description: z.string().optional(),
  isbn: z.string().optional(),
  pages: z.number().int().min(1).optional(),
  age_range: z.string().optional(),
  language: z.string().optional(),
  publisher: z.string().optional(),
  publication_year: z.number().int().min(1000).max(new Date().getFullYear()).optional(),
  cover_url: z.string().url().optional(),
  status: z.enum(['available', 'issued', 'reserved', 'lost']),
  qty_total: z.number().int().min(1),
  price_uah: z.number().min(0).optional(),
  location: z.string().optional(),
  rating: z.number().min(0).max(5).optional(),
  rating_count: z.number().int().min(0).optional(),
  badges: z.array(z.string()).optional(),
  tags: z.array(z.string()).optional(),
})

// ============================================================================
// SERVER ACTIONS
// ============================================================================

export async function createBook(form: CreateBookForm) {
  try {
    // –í–∞–ª—ñ–¥—É—î–º–æ –¥–∞–Ω—ñ
    const input = BookInsertSchema.parse(form)
    
    console.log('Creating book:', input)
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É –≤ Supabase
    const { data, error } = await supabase
      .from('books')
      .insert({
        ...input,
        qty_available: input.qty_total,
        available: input.status === 'available',
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      })
      .select()
    
    if (error) {
      console.error('Supabase error:', error)
      throw new Error(error.message)
    }
    
    if (!data || data.length === 0) {
      throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–Ω–∏–≥—É - –¥–∞–Ω—ñ –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –∑ –±–∞–∑–∏')
    }
    
    const createdBook = data[0]
    
    console.log('Book created successfully:', createdBook)
    
    return { success: true, data: createdBook }
    
  } catch (error) {
    console.error('Create book error:', error)
    
    if (error instanceof z.ZodError) {
      return { 
        success: false, 
        error: error.errors.map(e => e.message).join(', ')
      }
    }
    
    return { 
      success: false, 
      error: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
    }
  }
}

export async function updateBook(id: string, form: Partial<CreateBookForm>) {
  try {
    console.log('üìù Starting book update:', id, form)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ID –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω
    if (!id || !id.trim()) {
      return { success: false, error: "ID –∫–Ω–∏–≥–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –∞–±–æ –ø—É—Å—Ç–∏–π" }
    }
    
    // –í–∞–ª—ñ–¥—É—î–º–æ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è —è–∫—â–æ –≤–æ–Ω–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ
    if (form.code && !form.code.trim()) {
      return { success: false, error: "–ö–æ–¥ –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—É—Å—Ç–∏–º" }
    }
    if (form.title && !form.title.trim()) {
      return { success: false, error: "–ù–∞–∑–≤–∞ –∫–Ω–∏–≥–∏ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—É—Å—Ç–æ—é" }
    }
    
    // –ü—ñ–¥–≥–æ—Ç–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    const updateData: any = {}
    
    if (form.code) updateData.code = form.code.trim()
    if (form.title) updateData.title = form.title.trim()
    if (form.author) updateData.author = form.author.trim()
    if (form.category) updateData.category = form.category.trim()
    if (form.subcategory !== undefined) updateData.subcategory = form.subcategory?.trim() || null
    if (form.description !== undefined) updateData.description = form.description?.trim() || null
    if (form.short_description !== undefined) updateData.short_description = form.short_description?.trim() || null
    if (form.location !== undefined) updateData.location = form.location?.trim() || null
    if (form.cover_url !== undefined) updateData.cover_url = form.cover_url || null
    if (form.status) updateData.status = form.status
    if (form.qty_total !== undefined) updateData.qty_total = Math.max(1, form.qty_total)
    if (form.price_uah !== undefined) updateData.price_uah = form.price_uah || null
    
    // –Ø–∫—â–æ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å, –æ–Ω–æ–≤–ª—é—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å
    if (form.qty_total !== undefined) {
      // –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –∞—Ä–µ–Ω–¥–∏
      const { data: rentals, error: rentalsError } = await supabase
        .from('rentals')
        .select('id')
        .eq('book_id', id)
        .in('status', ['active', 'overdue'])
      
      if (rentalsError) {
        console.warn('Could not count active rentals:', rentalsError)
      } else {
        const activeRentals = rentals?.length || 0
        updateData.qty_available = Math.max(0, updateData.qty_total - activeRentals)
        updateData.available = updateData.qty_available > 0
      }
    }
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞—Ç—É –∑–º—ñ–Ω–∏
    updateData.updated_at = new Date().toISOString()
    
    console.log('üíæ Attempting to update book with ID:', id)
    console.log('üì¶ Update data:', JSON.stringify(updateData, null, 2))
    
    // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∏–º–æ, —á–∏ —ñ—Å–Ω—É—î –∫–Ω–∏–≥–∞ –∑ —Ç–∞–∫–∏–º ID
    const { data: existingBook, error: checkError } = await supabase
      .from('books')
      .select('id')
      .eq('id', id)
      .single()
    
    if (checkError || !existingBook) {
      const errorMessage = `–ö–Ω–∏–≥—É –∑ ID ${id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö`
      console.error(errorMessage, checkError)
      return { success: false, error: errorMessage }
    }
    
    console.log('‚úÖ Book exists, proceeding with update')
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∫–Ω–∏–≥—É –≤ Supabase
    const { data, error } = await supabase
      .from('books')
      .update(updateData)
      .eq('id', id)
      .select()
      .single()
    
    if (error) {
      console.error('Supabase error:', error)
      throw new Error(error.message)
    }
    
    console.log('‚úÖ Book updated successfully:', data)
    console.log('üîç Updated book data:', JSON.stringify(data, null, 2))
    
    return { success: true, data }
    
  } catch (error) {
    console.error('Update book error:', error)
    return { 
      success: false, 
      error: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
    }
  }
}

export async function deleteBook(id: string) {
  try {
    console.log('Deleting book:', id)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞—Ä–µ–Ω–¥—ã –¥–ª—è —ç—Ç–æ–π –∫–Ω–∏–≥–∏
    const { data: rentals, error: rentalsError } = await supabase
      .from('rentals')
      .select('id')
      .eq('book_id', id)
      .in('status', ['active', 'overdue'])
    
    if (rentalsError) {
      throw new Error(`–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ—Ä–µ–Ω–¥—É–≤–∞–Ω—å: ${rentalsError.message}`)
    }
    
    if (rentals && rentals.length > 0) {
      return { 
        success: false, 
        error: '–ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–Ω–∏–≥—É, —è–∫–∞ –º–∞—î –∞–∫—Ç–∏–≤–Ω—ñ –æ—Ä–µ–Ω–¥—É–≤–∞–Ω–Ω—è. –°–ø–æ—á–∞—Ç–∫—É –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å –≤—Å—ñ –ø—Ä–∏–º—ñ—Ä–Ω–∏–∫–∏.'
      }
    }
    
    // –£–¥–∞–ª—è–µ–º –∫–Ω–∏–≥—É
    const { error } = await supabase
      .from('books')
      .delete()
      .eq('id', id)
    
    if (error) {
      throw new Error(error.message)
    }
    
    console.log('Book deleted successfully:', id)
    
    return { success: true }
    
  } catch (error) {
    console.error('Delete book error:', error)
    return { 
      success: false, 
      error: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'
    }
  }
}