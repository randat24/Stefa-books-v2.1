const { GoogleSpreadsheet } = require('google-spreadsheet');
const { JWT } = require('google-auth-library');
require('dotenv').config({ path: '.env.local' });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∫–Ω–∏–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –∞–≤—Ç–æ—Ä–∞
function generateBookDescription(title, author, publisher, category) {
  const descriptions = {
    '–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—è': [
      `–ì–ª–∏–±–æ–∫–∞ —Ç–∞ –ø—Ä–æ–Ω–∏–∫–ª–∏–≤–∞ –∫–Ω–∏–≥–∞ "${title}" –≤—ñ–¥ ${author} –¥–æ–ø–æ–º–æ–∂–µ –≤–∞–º –∫—Ä–∞—â–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ –ª—é–¥—Å—å–∫—É –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—é —Ç–∞ –æ—Å–æ–±–∏—Å—Ç–µ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è.`,
      `"${title}" - —Ü–µ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏–π –ø–æ—Å—ñ–±–Ω–∏–∫ –≤—ñ–¥ ${author}, —è–∫–∏–π —Ä–æ–∑–∫—Ä–∏–≤–∞—î —Å–µ–∫—Ä–µ—Ç–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∏—Å–ª–µ–Ω–Ω—è —Ç–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏.`,
      `–í–∏–¥–∞—Ç–Ω–∞ –ø—Ä–∞—Ü—è ${author} "${title}" –ø—Ä–æ–ø–æ–Ω—É—î –Ω–æ–≤–∏–π –ø–æ–≥–ª—è–¥ –Ω–∞ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω—ñ –∞—Å–ø–µ–∫—Ç–∏ –∂–∏—Ç—Ç—è —Ç–∞ —Ä–æ–∑–≤–∏—Ç–∫—É –æ—Å–æ–±–∏—Å—Ç–æ—Å—Ç—ñ.`
    ],
    '–°–∞–º–æ—Ä–æ–∑–≤–∏—Ç–æ–∫': [
      `–ù–∞—Ç—Ö–Ω–µ–Ω–Ω–∞ –∫–Ω–∏–≥–∞ "${title}" –≤—ñ–¥ ${author} —Å—Ç–∞–Ω–µ –≤–∞—à–∏–º –ø—Ä–æ–≤—ñ–¥–Ω–∏–∫–æ–º —É —Å–≤—ñ—Ç—ñ –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ —Ä–æ–∑–≤–∏—Ç–∫—É —Ç–∞ —Å–∞–º–æ–≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è.`,
      `"${title}" - —Ü–µ –ø–æ—Ç—É–∂–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ç–∏—Ö, —Ö—Ç–æ –ø—Ä–∞–≥–Ω–µ –∑–º—ñ–Ω —Ç–∞ —Ä–æ—Å—Ç—É. ${author} –¥—ñ–ª–∏—Ç—å—Å—è —Ü—ñ–Ω–Ω–∏–º–∏ –∑–Ω–∞–Ω–Ω—è–º–∏ —Ç–∞ –¥–æ—Å–≤—ñ–¥–æ–º.`,
      `–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –ø–æ—Ä–∞–¥–∏ —Ç–∞ –º—É–¥—Ä—ñ –Ω–∞—Å—Ç–∞–Ω–æ–≤–∏ ${author} —É –∫–Ω–∏–∑—ñ "${title}" –¥–æ–ø–æ–º–æ–∂—É—Ç—å –≤–∞–º –¥–æ—Å—è–≥—Ç–∏ –Ω–æ–≤–∏—Ö –≤–∏—Å–æ—Ç —É –∂–∏—Ç—Ç—ñ.`
    ],
    '–ë—ñ–∑–Ω–µ—Å': [
      `–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –∫–Ω–∏–≥–∞ "${title}" –≤—ñ–¥ ${author} —Ä–æ–∑–∫—Ä–∏–≤–∞—î —Å–µ–∫—Ä–µ—Ç–∏ —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–µ–¥–µ–Ω–Ω—è –±—ñ–∑–Ω–µ—Å—É —Ç–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è.`,
      `"${title}" - —Ü–µ —Ü—ñ–Ω–Ω–∏–π —Ä–µ—Å—É—Ä—Å –¥–ª—è –ø—ñ–¥–ø—Ä–∏—î–º—Ü—ñ–≤ —Ç–∞ –∫–µ—Ä—ñ–≤–Ω–∏–∫—ñ–≤. ${author} –¥—ñ–ª–∏—Ç—å—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—è–º–∏ —É—Å–ø—ñ—Ö—É.`,
      `–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞–Ω–Ω—è —Ç–∞ –¥–æ—Å–≤—ñ–¥ ${author} —É –∫–Ω–∏–∑—ñ "${title}" –¥–æ–ø–æ–º–æ–∂—É—Ç—å –≤–∞–º –ø–æ–±—É–¥—É–≤–∞—Ç–∏ —É—Å–ø—ñ—à–Ω–∏–π –±—ñ–∑–Ω–µ—Å.`
    ],
    '–î–∏—Ç—è—á–∞ –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∞': [
      `–ß—É–¥–æ–≤–∞ –¥–∏—Ç—è—á–∞ –∫–Ω–∏–≥–∞ "${title}" –≤—ñ–¥ ${author} –∑–∞—Ö–æ–ø–ª—é—î —é–Ω–∏—Ö —á–∏—Ç–∞—á—ñ–≤ —Ü—ñ–∫–∞–≤–æ—é —ñ—Å—Ç–æ—Ä—ñ—î—é —Ç–∞ —è—Å–∫—Ä–∞–≤–∏–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏.`,
      `"${title}" - —Ü–µ –∑–∞—Ö–æ–ø–ª—é—é—á–∞ –ø—Ä–∏–≥–æ–¥–∞ –¥–ª—è –¥—ñ—Ç–µ–π, —Å—Ç–≤–æ—Ä–µ–Ω–∞ —Ç–∞–ª–∞–Ω–æ–≤–∏—Ç–∏–º –∞–≤—Ç–æ—Ä–æ–º ${author}.`,
      `–ö–Ω–∏–≥–∞ "${title}" –≤—ñ–¥ ${author} —Ä–æ–∑–≤–∏–≤–∞—î —É—è–≤—É –¥—ñ—Ç–µ–π —Ç–∞ –≤—á–∏—Ç—å –≤–∞–∂–ª–∏–≤–∏–º –∂–∏—Ç—Ç—î–≤–∏–º —É—Ä–æ–∫–∞–º —á–µ—Ä–µ–∑ —Ü—ñ–∫–∞–≤—É —ñ—Å—Ç–æ—Ä—ñ—é.`
    ],
    'default': [
      `–¶—ñ–∫–∞–≤–∞ —Ç–∞ –∑–º—ñ—Å—Ç–æ–≤–Ω–∞ –∫–Ω–∏–≥–∞ "${title}" –≤—ñ–¥ —Ç–∞–ª–∞–Ω–æ–≤–∏—Ç–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ ${author} –ø–æ–¥–∞—Ä—É—î –≤–∞–º –Ω–µ–∑–∞–±—É—Ç–Ω—ñ –≥–æ–¥–∏–Ω–∏ —á–∏—Ç–∞–Ω–Ω—è.`,
      `"${title}" - —Ü–µ –≤–∏–¥–∞—Ç–Ω–∞ –ø—Ä–∞—Ü—è ${author}, —è–∫–∞ –∑–∞—Å–ª—É–≥–æ–≤—É—î –Ω–∞ —É–≤–∞–≥—É –≤—Å—ñ—Ö –ø–æ—Ü—ñ–Ω–æ–≤—É–≤–∞—á—ñ–≤ —Ö–æ—Ä–æ—à–æ—ó –ª—ñ—Ç–µ—Ä–∞—Ç—É—Ä–∏.`,
      `–ö–Ω–∏–≥–∞ "${title}" –≤—ñ–¥ ${author} –ø—Ä–æ–ø–æ–Ω—É—î –≥–ª–∏–±–æ–∫—ñ —Ä–æ–∑–¥—É–º–∏ —Ç–∞ —Ü—ñ–∫–∞–≤—ñ —ñ–¥–µ—ó –¥–ª—è –≤—Å—ñ—Ö —á–∏—Ç–∞—á—ñ–≤.`
    ]
  };

  const templates = descriptions[category] || descriptions['default'];
  const randomTemplate = templates[Math.floor(Math.random() * templates.length)];
  
  return randomTemplate;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è URL –æ–±–ª–æ–∂–∫–∏ –∫–Ω–∏–≥–∏
function generateCoverUrl(title, author) {
  // –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏
  const filename = title
    .toLowerCase()
    .replace(/[^–∞-—è\w\s]/gi, '') // –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∏—Ä–∏–ª–ª–∏—Ü—É –∏ –ª–∞—Ç–∏–Ω–∏—Ü—É
    .replace(/\s+/g, '-') // –ü—Ä–æ–±–µ–ª—ã –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –¥–µ—Ñ–∏—Å—ã
    .slice(0, 50); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
  
  return `/images/books/${filename}.jpg`;
}

async function enrichBookData() {
  console.log('üîÑ Starting book data enrichment process...\n');
  
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    const auth = new JWT({
      email: process.env.GOOGLE_SHEETS_CLIENT_EMAIL,
      key: process.env.GOOGLE_SHEETS_PRIVATE_KEY?.replace(/\\n/g, '\n'),
      scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });
    
    const doc = new GoogleSpreadsheet(process.env.GOOGLE_SHEETS_SPREADSHEET_ID, auth);
    await doc.loadInfo();
    
    // –ü–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç —Å –∫–Ω–∏–≥–∞–º–∏
    const booksSheet = doc.sheetsByTitle['–ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥'];
    if (!booksSheet) {
      throw new Error('Sheet "–ö–∞—Ç–∞–ª–æ–≥ –∫–Ω–∏–≥" not found');
    }
    
    console.log('üìä Loading book data from Google Sheets...');
    await booksSheet.loadHeaderRow();
    const allRows = await booksSheet.getRows();
    
    console.log(`üìö Found ${allRows.length} books to process\n`);
    
    let processedCount = 0;
    let enrichedCount = 0;
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∫–Ω–∏–≥—É
    for (const [index, row] of allRows.entries()) {
      const title = row.get('–ù–∞–∑–≤–∞') || '';
      const author = row.get('–ê–≤—Ç–æ—Ä') || '';
      const publisher = row.get('–í–∏–¥–∞–≤–Ω–∏—Ü—Ç–≤–æ') || '';
      const category = row.get('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è') || '';
      const currentDescription = row.get('–û–ø–∏—Å') || '';
      const currentCover = row.get('–§–æ—Ç–æ (URL)') || '';
      
      if (!title || !author) {
        console.log(`‚ö†Ô∏è  Skipping row ${index + 1}: missing title or author`);
        continue;
      }
      
      let updated = false;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!currentDescription || currentDescription.trim() === '') {
        const newDescription = generateBookDescription(title, author, publisher, category);
        row.set('–û–ø–∏—Å', newDescription);
        updated = true;
        console.log(`üìù Added description for: ${title}`);
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º URL –æ–±–ª–æ–∂–∫–∏, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!currentCover || currentCover.trim() === '') {
        const newCoverUrl = generateCoverUrl(title, author);
        row.set('–§–æ—Ç–æ (URL)', newCoverUrl);
        updated = true;
        console.log(`üñºÔ∏è  Added cover URL for: ${title}`);
      }
      
      if (updated) {
        await row.save();
        enrichedCount++;
      }
      
      processedCount++;
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 –∫–Ω–∏–≥
      if (processedCount % 10 === 0) {
        console.log(`‚è≥ Processed ${processedCount}/${allRows.length} books (${enrichedCount} enriched)`);
      }
    }
    
    console.log('\n‚úÖ Book data enrichment completed!');
    console.log(`üìä Statistics:`);
    console.log(`   - Total books processed: ${processedCount}`);
    console.log(`   - Books enriched: ${enrichedCount}`);
    console.log(`   - Books already complete: ${processedCount - enrichedCount}`);
    
  } catch (error) {
    console.error('‚ùå Error during book enrichment:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
enrichBookData();